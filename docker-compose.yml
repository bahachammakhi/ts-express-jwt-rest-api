version: "3"

services:
  app:
    container_name: express
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - ./:/usr/src/app
    ports:
      - "5000:5000"
    env_file: ./.env
    environment:
      NODE_ENV: development
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: postgres:${POSTGRES_VERSION:-12}
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - "./postgres-assets/init.sql:/docker-entrypoint-initdb.d/init.sql"
    ports:
      - "5432:5432"
    # networks:
    #   - postgres
    restart: unless-stopped

  # pgadmin:
  #   container_name: pgadmin
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@example.com}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
  #     PG_DATABASE: postgres
  #     PG_USER: ${POSTGRES_USER:-postgres}
  #     PG_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
  #   volumes:
  #     - pgadmin:/root/.pgadmin
  #     - "./postgres-assets/servers.json:/pgadmin4/servers.json"
  #   ports:
  #     - "${PGADMIN_PORT:-5050}:80"
    # networks:
    #   - postgres
    restart: unless-stopped
    
volumes:
  postgres:
  pgadmin:
